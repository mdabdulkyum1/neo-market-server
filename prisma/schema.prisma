generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum ReferralStatus {
  PENDING
  CONVERTED
}

model User {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String       @unique
  password        String?      
  referralCode    String       @unique
  image           String?
  isEmailVerified Boolean      @default(false)
  role            Role         @default(USER)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  credits         Int          @default(0)

  // Relations
  referralsGiven  Referral[]   @relation("ReferralsGiven")
  referralsGotten Referral[]   @relation("ReferralsGotten")
  purchases       Purchase[]
  dashboard       Dashboard?

  @@map("users")
}

model Referral {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  referrerId   String          @db.ObjectId
  referredId   String          @db.ObjectId
  referralCode String
  status       ReferralStatus  @default(PENDING)
  convertedAt  DateTime?
  createdAt    DateTime        @default(now())
  purchaseId   String?         @unique @db.ObjectId  // âœ… one-to-one

  // Relations
  referrer     User            @relation("ReferralsGiven", fields: [referrerId], references: [id])
  referred     User            @relation("ReferralsGotten", fields: [referredId], references: [id])
  purchase     Purchase?       @relation("ReferralPurchase", fields: [purchaseId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([referrerId, referredId])
  @@map("referrals")
}

model Purchase {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  userId          String    @db.ObjectId
  productId       String
  amount          Float
  isFirstPurchase Boolean   @default(true)
  purchaseDate    DateTime  @default(now())
  referralId      String?   @db.ObjectId

  // Relations
  user            User      @relation(fields: [userId], references: [id])
  referral        Referral? @relation("ReferralPurchase")

  @@index([userId])
  @@map("purchases")
}

model Dashboard {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @unique @db.ObjectId
  referredUsers  Int      @default(0)
  convertedUsers Int      @default(0)
  totalCredits   Int      @default(0)

  user           User     @relation(fields: [userId], references: [id])
  @@map("dashboard")
}

model OTP {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  otpCode   String
  expiry    DateTime
  createdAt DateTime @default(now())

  @@unique([userId, otpCode])
  @@map("otp")
}
